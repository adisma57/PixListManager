{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pix\\\\Documents\\\\Projects\\\\spotify-app\\\\src\\\\pages\\\\ArtistPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getArtistAlbums } from '../services/spotifyService';\nimport AlbumDisplay from '../components/AlbumDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArtistPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [albums, setAlbums] = useState([]);\n  const [selectedAlbum, setSelectedAlbum] = useState(null);\n  const [includeLive, setIncludeLive] = useState(true);\n  useEffect(() => {\n    async function fetchAlbums() {\n      const data = await getArtistAlbums(id, includeLive);\n      setAlbums(data);\n    }\n    fetchAlbums();\n  }, [id, includeLive]);\n  if (selectedAlbum) {\n    return /*#__PURE__*/_jsxDEV(AlbumDisplay, {\n      album: selectedAlbum,\n      onBack: () => setSelectedAlbum(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Albums\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: includeLive,\n        onChange: () => setIncludeLive(!includeLive)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), \"Inclure les albums live\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: '20px',\n        marginTop: '20px',\n        overflowY: 'auto',\n        maxHeight: '600px'\n      },\n      children: albums.map(album => {\n        var _album$images$;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => setSelectedAlbum(album),\n          style: {\n            cursor: 'pointer'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: (_album$images$ = album.images[0]) === null || _album$images$ === void 0 ? void 0 : _album$images$.url,\n            alt: album.name,\n            style: {\n              width: '150px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: album.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: album.release_date.substring(0, 4)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, album.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ArtistPage, \"kmgUgPcC0TXPuag2N5xh6GvXP+c=\", false, function () {\n  return [useParams];\n});\n_c = ArtistPage;\nexport default ArtistPage;\nvar _c;\n$RefreshReg$(_c, \"ArtistPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","getArtistAlbums","AlbumDisplay","jsxDEV","_jsxDEV","ArtistPage","_s","id","albums","setAlbums","selectedAlbum","setSelectedAlbum","includeLive","setIncludeLive","fetchAlbums","data","album","onBack","fileName","_jsxFileName","lineNumber","columnNumber","children","type","checked","onChange","style","display","flexWrap","gap","marginTop","overflowY","maxHeight","map","_album$images$","onClick","cursor","src","images","url","alt","name","width","release_date","substring","_c","$RefreshReg$"],"sources":["C:/Users/Pix/Documents/Projects/spotify-app/src/pages/ArtistPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getArtistAlbums } from '../services/spotifyService';\r\nimport AlbumDisplay from '../components/AlbumDisplay';\r\n\r\nconst ArtistPage = () => {\r\n  const { id } = useParams();\r\n  const [albums, setAlbums] = useState([]);\r\n  const [selectedAlbum, setSelectedAlbum] = useState(null);\r\n  const [includeLive, setIncludeLive] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function fetchAlbums() {\r\n      const data = await getArtistAlbums(id, includeLive);\r\n      setAlbums(data);\r\n    }\r\n    fetchAlbums();\r\n  }, [id, includeLive]);\r\n\r\n  if (selectedAlbum) {\r\n    return <AlbumDisplay album={selectedAlbum} onBack={() => setSelectedAlbum(null)} />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Albums</h1>\r\n      <label>\r\n        <input \r\n          type=\"checkbox\" \r\n          checked={includeLive} \r\n          onChange={() => setIncludeLive(!includeLive)} \r\n        />\r\n        Inclure les albums live\r\n      </label>\r\n      <div style={{ display: 'flex', flexWrap: 'wrap', gap: '20px', marginTop: '20px', overflowY: 'auto', maxHeight: '600px' }}>\r\n        {albums.map(album => (\r\n          <div key={album.id} onClick={() => setSelectedAlbum(album)} style={{ cursor: 'pointer' }}>\r\n            <img src={album.images[0]?.url} alt={album.name} style={{ width: '150px' }} />\r\n            <div>{album.name}</div>\r\n            <div>{album.release_date.substring(0,4)}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArtistPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}