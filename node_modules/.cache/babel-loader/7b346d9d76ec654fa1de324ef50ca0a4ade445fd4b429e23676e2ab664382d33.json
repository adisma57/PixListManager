{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pix\\\\Documents\\\\Projects\\\\spotify-app\\\\src\\\\pages\\\\ArtistPage.jsx\",\n  _s = $RefreshSig$();\n// src/pages/ArtistPage.jsx\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getArtistAlbums } from '../services/spotifyService';\nimport AlbumDisplay from '../components/AlbumDisplay';\nimport AddAlbumToPlaylistModal from '../components/AddAlbumToPlaylistModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArtistPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [albums, setAlbums] = useState([]);\n  const [selectedAlbum, setSelectedAlbum] = useState(null);\n  const [includeLive, setIncludeLive] = useState(true);\n  const [selectedAlbums, setSelectedAlbums] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  useEffect(() => {\n    async function fetchAlbums() {\n      const data = await getArtistAlbums(id, includeLive);\n      setAlbums(data);\n    }\n    fetchAlbums();\n  }, [id, includeLive]);\n  const toggleSelectAlbum = album => {\n    if (selectedAlbums.find(a => a.id === album.id)) {\n      setSelectedAlbums(selectedAlbums.filter(a => a.id !== album.id));\n    } else {\n      setSelectedAlbums([...selectedAlbums, album]);\n    }\n  };\n  const toggleSelectAll = () => {\n    if (selectedAlbums.length === albums.length) {\n      setSelectedAlbums([]);\n    } else {\n      setSelectedAlbums(albums);\n    }\n  };\n  if (selectedAlbum) {\n    return /*#__PURE__*/_jsxDEV(AlbumDisplay, {\n      album: selectedAlbum,\n      onBack: () => setSelectedAlbum(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Albums\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: includeLive,\n        onChange: () => setIncludeLive(!includeLive)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), \"Inclure les albums live\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleSelectAll,\n      style: {\n        marginLeft: '10px'\n      },\n      children: selectedAlbums.length === albums.length ? 'Désélectionner tous' : 'Sélectionner tous'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: '20px',\n        marginTop: '20px',\n        overflowY: 'auto',\n        maxHeight: '600px'\n      },\n      children: albums.map(album => {\n        var _album$images$;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"album-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: (_album$images$ = album.images[0]) === null || _album$images$ === void 0 ? void 0 : _album$images$.url,\n            alt: album.name,\n            style: {\n              width: '150px',\n              borderRadius: '4px'\n            },\n            onClick: () => setSelectedAlbum(album)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: album.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: album.release_date.substring(0, 4)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: !!selectedAlbums.find(a => a.id === album.id),\n            onChange: () => toggleSelectAlbum(album),\n            className: \"album-select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, album.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), selectedAlbums.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowModal(true),\n        children: \"Ajouter les albums s\\xE9lectionn\\xE9s \\xE0 une playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), showModal && /*#__PURE__*/_jsxDEV(AddAlbumToPlaylistModal, {\n      selectedAlbums: selectedAlbums,\n      onClose: () => {\n        setShowModal(false);\n        setSelectedAlbums([]);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(ArtistPage, \"uDKNGxNEWWJe701W16D/6q+Z92E=\", false, function () {\n  return [useParams];\n});\n_c = ArtistPage;\nexport default ArtistPage;\nvar _c;\n$RefreshReg$(_c, \"ArtistPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","getArtistAlbums","AlbumDisplay","AddAlbumToPlaylistModal","jsxDEV","_jsxDEV","ArtistPage","_s","id","albums","setAlbums","selectedAlbum","setSelectedAlbum","includeLive","setIncludeLive","selectedAlbums","setSelectedAlbums","showModal","setShowModal","fetchAlbums","data","toggleSelectAlbum","album","find","a","filter","toggleSelectAll","length","onBack","fileName","_jsxFileName","lineNumber","columnNumber","children","type","checked","onChange","onClick","style","marginLeft","display","flexWrap","gap","marginTop","overflowY","maxHeight","map","_album$images$","className","src","images","url","alt","name","width","borderRadius","release_date","substring","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Pix/Documents/Projects/spotify-app/src/pages/ArtistPage.jsx"],"sourcesContent":["// src/pages/ArtistPage.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getArtistAlbums } from '../services/spotifyService';\r\nimport AlbumDisplay from '../components/AlbumDisplay';\r\nimport AddAlbumToPlaylistModal from '../components/AddAlbumToPlaylistModal';\r\n\r\nconst ArtistPage = () => {\r\n  const { id } = useParams();\r\n  const [albums, setAlbums] = useState([]);\r\n  const [selectedAlbum, setSelectedAlbum] = useState(null);\r\n  const [includeLive, setIncludeLive] = useState(true);\r\n  const [selectedAlbums, setSelectedAlbums] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function fetchAlbums() {\r\n      const data = await getArtistAlbums(id, includeLive);\r\n      setAlbums(data);\r\n    }\r\n    fetchAlbums();\r\n  }, [id, includeLive]);\r\n\r\n  const toggleSelectAlbum = (album) => {\r\n    if (selectedAlbums.find(a => a.id === album.id)) {\r\n      setSelectedAlbums(selectedAlbums.filter(a => a.id !== album.id));\r\n    } else {\r\n      setSelectedAlbums([...selectedAlbums, album]);\r\n    }\r\n  };\r\n\r\n  const toggleSelectAll = () => {\r\n    if (selectedAlbums.length === albums.length) {\r\n      setSelectedAlbums([]);\r\n    } else {\r\n      setSelectedAlbums(albums);\r\n    }\r\n  };\r\n\r\n  if (selectedAlbum) {\r\n    return <AlbumDisplay album={selectedAlbum} onBack={() => setSelectedAlbum(null)} />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Albums</h1>\r\n      <label>\r\n        <input \r\n          type=\"checkbox\" \r\n          checked={includeLive} \r\n          onChange={() => setIncludeLive(!includeLive)} \r\n        />\r\n        Inclure les albums live\r\n      </label>\r\n      <button onClick={toggleSelectAll} style={{ marginLeft: '10px' }}>\r\n        {selectedAlbums.length === albums.length ? 'Désélectionner tous' : 'Sélectionner tous'}\r\n      </button>\r\n      <div style={{ display: 'flex', flexWrap: 'wrap', gap: '20px', marginTop: '20px', overflowY: 'auto', maxHeight: '600px' }}>\r\n        {albums.map(album => (\r\n          <div key={album.id} className=\"album-card\">\r\n            <img \r\n              src={album.images[0]?.url} \r\n              alt={album.name} \r\n              style={{ width: '150px', borderRadius: '4px' }} \r\n              onClick={() => setSelectedAlbum(album)} \r\n            />\r\n            <div>{album.name}</div>\r\n            <div>{album.release_date.substring(0,4)}</div>\r\n            <input \r\n              type=\"checkbox\" \r\n              checked={!!selectedAlbums.find(a => a.id === album.id)} \r\n              onChange={() => toggleSelectAlbum(album)}\r\n              className=\"album-select\"\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {selectedAlbums.length > 0 && (\r\n        <div style={{ marginTop: '20px' }}>\r\n          <button onClick={() => setShowModal(true)}>\r\n            Ajouter les albums sélectionnés à une playlist\r\n          </button>\r\n        </div>\r\n      )}\r\n      {showModal && (\r\n        <AddAlbumToPlaylistModal \r\n          selectedAlbums={selectedAlbums} \r\n          onClose={() => { setShowModal(false); setSelectedAlbums([]); }} \r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArtistPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}