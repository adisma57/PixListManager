{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pix\\\\Documents\\\\Projects\\\\spotify-app\\\\src\\\\pages\\\\PlaylistPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getUserPlaylists } from '../services/spotifyService';\nimport { useNavigate } from 'react-router-dom';\nimport './PlaylistPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlaylistPage = () => {\n  _s();\n  const [playlists, setPlaylists] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchPlaylists = async () => {\n      try {\n        const data = await getUserPlaylists();\n        setPlaylists(data);\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des playlists:\", error);\n      }\n    };\n    fetchPlaylists();\n  }, []);\n  const handleViewDetails = playlistId => {\n    navigate(`/playlists/${playlistId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playlist-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Mes Playlists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlists-grid\",\n      children: playlists.map(playlist => {\n        var _playlist$images$;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playlist-card\",\n          onClick: () => handleViewDetails(playlist.id),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: ((_playlist$images$ = playlist.images[0]) === null || _playlist$images$ === void 0 ? void 0 : _playlist$images$.url) || '/default-playlist.png',\n            alt: playlist.name,\n            className: \"playlist-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"playlist-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: playlist.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [playlist.tracks.total, \" chansons\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, playlist.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(PlaylistPage, \"A8XONJa6jpNYHhAdYma+VT0UiJY=\", false, function () {\n  return [useNavigate];\n});\n_c = PlaylistPage;\nexport default PlaylistPage;\nvar _c;\n$RefreshReg$(_c, \"PlaylistPage\");","map":{"version":3,"names":["React","useState","useEffect","getUserPlaylists","useNavigate","jsxDEV","_jsxDEV","PlaylistPage","_s","playlists","setPlaylists","navigate","fetchPlaylists","data","error","console","handleViewDetails","playlistId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","playlist","_playlist$images$","onClick","id","src","images","url","alt","name","tracks","total","_c","$RefreshReg$"],"sources":["C:/Users/Pix/Documents/Projects/spotify-app/src/pages/PlaylistPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getUserPlaylists } from '../services/spotifyService';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './PlaylistPage.css';\r\n\r\nconst PlaylistPage = () => {\r\n  const [playlists, setPlaylists] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchPlaylists = async () => {\r\n      try {\r\n        const data = await getUserPlaylists();\r\n        setPlaylists(data);\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la récupération des playlists:\", error);\r\n      }\r\n    };\r\n    fetchPlaylists();\r\n  }, []);\r\n\r\n  const handleViewDetails = (playlistId) => {\r\n    navigate(`/playlists/${playlistId}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"playlist-page\">\r\n      <h1>Mes Playlists</h1>\r\n      <div className=\"playlists-grid\">\r\n        {playlists.map(playlist => (\r\n          <div key={playlist.id} className=\"playlist-card\" onClick={() => handleViewDetails(playlist.id)}>\r\n            <img \r\n              src={playlist.images[0]?.url || '/default-playlist.png'} \r\n              alt={playlist.name} \r\n              className=\"playlist-image\"\r\n            />\r\n            <div className=\"playlist-info\">\r\n              <h3>{playlist.name}</h3>\r\n              <p>{playlist.tracks.total} chansons</p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlaylistPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,gBAAgB,QAAQ,4BAA4B;AAC7D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMU,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMU,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMV,gBAAgB,CAAC,CAAC;QACrCO,YAAY,CAACG,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;MACvE;IACF,CAAC;IACDF,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,iBAAiB,GAAIC,UAAU,IAAK;IACxCN,QAAQ,CAAC,cAAcM,UAAU,EAAE,CAAC;EACtC,CAAC;EAED,oBACEX,OAAA;IAAKY,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5Bb,OAAA;MAAAa,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBjB,OAAA;MAAKY,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC5BV,SAAS,CAACe,GAAG,CAACC,QAAQ;QAAA,IAAAC,iBAAA;QAAA,oBACrBpB,OAAA;UAAuBY,SAAS,EAAC,eAAe;UAACS,OAAO,EAAEA,CAAA,KAAMX,iBAAiB,CAACS,QAAQ,CAACG,EAAE,CAAE;UAAAT,QAAA,gBAC7Fb,OAAA;YACEuB,GAAG,EAAE,EAAAH,iBAAA,GAAAD,QAAQ,CAACK,MAAM,CAAC,CAAC,CAAC,cAAAJ,iBAAA,uBAAlBA,iBAAA,CAAoBK,GAAG,KAAI,uBAAwB;YACxDC,GAAG,EAAEP,QAAQ,CAACQ,IAAK;YACnBf,SAAS,EAAC;UAAgB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC,eACFjB,OAAA;YAAKY,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAC5Bb,OAAA;cAAAa,QAAA,EAAKM,QAAQ,CAACQ;YAAI;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACxBjB,OAAA;cAAAa,QAAA,GAAIM,QAAQ,CAACS,MAAM,CAACC,KAAK,EAAC,WAAS;YAAA;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC;QAAA,GATEE,QAAQ,CAACG,EAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAUhB,CAAC;MAAA,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACf,EAAA,CAxCID,YAAY;EAAA,QAECH,WAAW;AAAA;AAAAgC,EAAA,GAFxB7B,YAAY;AA0ClB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}