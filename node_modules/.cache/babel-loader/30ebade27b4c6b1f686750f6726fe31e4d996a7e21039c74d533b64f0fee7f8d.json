{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pix\\\\Documents\\\\Projects\\\\spotify-app\\\\src\\\\components\\\\AddAlbumToPlaylistModal.jsx\",\n  _s = $RefreshSig$();\n// src/components/AddAlbumToPlaylistModal.jsx\nimport React, { useState, useEffect } from 'react';\nimport { getUserPlaylists, createPlaylist, addTracksToPlaylist, getCurrentUser, getAlbumTracks } from '../services/spotifyService';\nimport './AddAlbumToPlaylistModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddAlbumToPlaylistModal = ({\n  selectedAlbums,\n  onClose\n}) => {\n  _s();\n  const [playlists, setPlaylists] = useState([]);\n  const [selectedPlaylist, setSelectedPlaylist] = useState('');\n  const [newPlaylistName, setNewPlaylistName] = useState('');\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const fetchPlaylists = async () => {\n      try {\n        const userPlaylists = await getUserPlaylists();\n        setPlaylists(userPlaylists);\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des playlists :\", error);\n      }\n    };\n    fetchPlaylists();\n  }, []);\n  const handleAddAlbums = async () => {\n    if (!selectedAlbums || selectedAlbums.length === 0) {\n      alert(\"Aucun album à ajouter.\");\n      return;\n    }\n    setLoading(true);\n    try {\n      let playlistId = selectedPlaylist;\n\n      // Créer une nouvelle playlist si on a saisi un nom\n      if (newPlaylistName) {\n        const user = await getCurrentUser();\n        const newPl = await createPlaylist(user.id, newPlaylistName);\n        playlistId = newPl.id;\n      }\n\n      // Pour chaque album sélectionné, on récupère les pistes\n      let allUris = [];\n      for (const album of selectedAlbums) {\n        console.log(album);\n        const tracks = await getAlbumTracks(album.id);\n        const uris = tracks.map(t => t.uri);\n        allUris.push(...uris);\n      }\n      if (playlistId && allUris.length > 0) {\n        await addTracksToPlaylist(playlistId, allUris);\n      }\n      onClose();\n    } catch (error) {\n      console.error(\"Erreur lors de l'ajout des albums :\", error);\n      alert(\"Impossible d'ajouter les albums à la playlist.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Ajouter \", selectedAlbums === null || selectedAlbums === void 0 ? void 0 : selectedAlbums.length, \" album(s) \\xE0 une playlist\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Chaque album sera enti\\xE8rement ajout\\xE9 (tous les titres).\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"select-playlist-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Choisir une playlist :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedPlaylist,\n          onChange: e => setSelectedPlaylist(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- S\\xE9lectionnez --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), playlists.map(pl => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: pl.id,\n            children: pl.name\n          }, pl.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-playlist-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Ou cr\\xE9er une nouvelle playlist :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Nom de la nouvelle playlist\",\n          value: newPlaylistName,\n          onChange: e => setNewPlaylistName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddAlbums,\n          disabled: loading,\n          children: loading ? \"Ajout en cours...\" : \"Ajouter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          children: \"Annuler\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(AddAlbumToPlaylistModal, \"4ZDergHH4ODm9QMCD8hGlyxRIdQ=\");\n_c = AddAlbumToPlaylistModal;\nexport default AddAlbumToPlaylistModal;\nvar _c;\n$RefreshReg$(_c, \"AddAlbumToPlaylistModal\");","map":{"version":3,"names":["React","useState","useEffect","getUserPlaylists","createPlaylist","addTracksToPlaylist","getCurrentUser","getAlbumTracks","jsxDEV","_jsxDEV","AddAlbumToPlaylistModal","selectedAlbums","onClose","_s","playlists","setPlaylists","selectedPlaylist","setSelectedPlaylist","newPlaylistName","setNewPlaylistName","loading","setLoading","fetchPlaylists","userPlaylists","error","console","handleAddAlbums","length","alert","playlistId","user","newPl","id","allUris","album","log","tracks","uris","map","t","uri","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","pl","name","type","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Pix/Documents/Projects/spotify-app/src/components/AddAlbumToPlaylistModal.jsx"],"sourcesContent":["// src/components/AddAlbumToPlaylistModal.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  getUserPlaylists,\r\n  createPlaylist,\r\n  addTracksToPlaylist,\r\n  getCurrentUser,\r\n  getAlbumTracks,\r\n} from '../services/spotifyService';\r\nimport './AddAlbumToPlaylistModal.css';\r\n\r\nconst AddAlbumToPlaylistModal = ({ selectedAlbums, onClose }) => {\r\n  const [playlists, setPlaylists] = useState([]);\r\n  const [selectedPlaylist, setSelectedPlaylist] = useState('');\r\n  const [newPlaylistName, setNewPlaylistName] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchPlaylists = async () => {\r\n      try {\r\n        const userPlaylists = await getUserPlaylists();\r\n        setPlaylists(userPlaylists);\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la récupération des playlists :\", error);\r\n      }\r\n    };\r\n    fetchPlaylists();\r\n  }, []);\r\n\r\n  const handleAddAlbums = async () => {\r\n    if (!selectedAlbums || selectedAlbums.length === 0) {\r\n      alert(\"Aucun album à ajouter.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      let playlistId = selectedPlaylist;\r\n\r\n      // Créer une nouvelle playlist si on a saisi un nom\r\n      if (newPlaylistName) {\r\n        const user = await getCurrentUser();\r\n        const newPl = await createPlaylist(user.id, newPlaylistName);\r\n        playlistId = newPl.id;\r\n      }\r\n\r\n      // Pour chaque album sélectionné, on récupère les pistes\r\n      let allUris = [];\r\n      for (const album of selectedAlbums) {\r\n\t\t  console.log(album)\r\n        const tracks = await getAlbumTracks(album.id);\r\n        const uris = tracks.map(t => t.uri);\r\n        allUris.push(...uris);\r\n      }\r\n\r\n      if (playlistId && allUris.length > 0) {\r\n        await addTracksToPlaylist(playlistId, allUris);\r\n      }\r\n      onClose();\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de l'ajout des albums :\", error);\r\n      alert(\"Impossible d'ajouter les albums à la playlist.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-content\">\r\n        <h2>Ajouter {selectedAlbums?.length} album(s) à une playlist</h2>\r\n        <p>Chaque album sera entièrement ajouté (tous les titres).</p>\r\n\r\n        <div className=\"select-playlist-section\">\r\n          <label>Choisir une playlist :</label>\r\n          <select\r\n            value={selectedPlaylist}\r\n            onChange={(e) => setSelectedPlaylist(e.target.value)}\r\n          >\r\n            <option value=\"\">-- Sélectionnez --</option>\r\n            {playlists.map(pl => (\r\n              <option key={pl.id} value={pl.id}>{pl.name}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"new-playlist-section\">\r\n          <label>Ou créer une nouvelle playlist :</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Nom de la nouvelle playlist\"\r\n            value={newPlaylistName}\r\n            onChange={(e) => setNewPlaylistName(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"modal-actions\">\r\n          <button onClick={handleAddAlbums} disabled={loading}>\r\n            {loading ? \"Ajout en cours...\" : \"Ajouter\"}\r\n          </button>\r\n          <button onClick={onClose}>Annuler</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddAlbumToPlaylistModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}