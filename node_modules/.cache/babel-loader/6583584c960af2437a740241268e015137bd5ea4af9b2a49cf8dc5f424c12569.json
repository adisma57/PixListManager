{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pix\\\\Documents\\\\Projects\\\\spotify-app\\\\src\\\\pages\\\\SearchResults.jsx\",\n  _s = $RefreshSig$();\n// src/pages/SearchResults.jsx\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchArtists, searchAlbums, searchTracks } from '../services/spotifyService';\nimport './SearchResults.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TABS = {\n  ARTIST: 'artist',\n  ALBUM: 'album',\n  TRACK: 'track'\n};\nconst SearchResults = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('q') || '';\n\n  // Onglet actif : \"artist\" (par défaut), \"album\", ou \"track\"\n  const [activeTab, setActiveTab] = useState(TABS.ARTIST);\n\n  // Les tableaux complets renvoyés par l'API\n  const [artistAll, setArtistAll] = useState([]);\n  const [albumAll, setAlbumAll] = useState([]);\n  const [trackAll, setTrackAll] = useState([]);\n\n  // Nombre d'éléments actuellement affichés (pagination locale)\n  const [artistDisplayCount, setArtistDisplayCount] = useState(20);\n  const [albumDisplayCount, setAlbumDisplayCount] = useState(20);\n  const [trackDisplayCount, setTrackDisplayCount] = useState(20);\n\n  // Chargement initial\n  const [loadingInitial, setLoadingInitial] = useState(false);\n\n  // Référence pour le conteneur scrollable\n  const containerRef = useRef(null);\n  useEffect(() => {\n    const loadData = async () => {\n      if (!query) return;\n      setLoadingInitial(true);\n      try {\n        // Les fonctions searchArtists, searchAlbums, searchTracks renvoient directement des tableaux\n        // par ex: [ {...}, {...}, ... ]\n        const [artists, albums, tracks] = await Promise.all([searchArtists(query), searchAlbums(query), searchTracks(query)]);\n\n        // Stockage complet\n        setArtistAll(artists || []);\n        setAlbumAll(albums || []);\n        setTrackAll(tracks || []);\n\n        // On réinitialise le count\n        setArtistDisplayCount(20);\n        setAlbumDisplayCount(20);\n        setTrackDisplayCount(20);\n      } catch (err) {\n        console.error('Erreur lors de la recherche :', err);\n      } finally {\n        setLoadingInitial(false);\n      }\n    };\n    loadData();\n  }, [query]);\n\n  // handleScroll : si on est proche du bas, on augmente la pagination du tab actif\n  const handleScroll = () => {\n    const container = containerRef.current;\n    if (!container) return;\n    const scrollTop = container.scrollTop;\n    const scrollHeight = container.scrollHeight;\n    const clientHeight = container.clientHeight;\n\n    // ~100px avant la fin\n    if (scrollTop + clientHeight >= scrollHeight - 100) {\n      // On incrémente le displayCount du tab actif\n      if (activeTab === TABS.ARTIST && artistDisplayCount < artistAll.length) {\n        setArtistDisplayCount(prev => prev + 20);\n      } else if (activeTab === TABS.ALBUM && albumDisplayCount < albumAll.length) {\n        setAlbumDisplayCount(prev => prev + 20);\n      } else if (activeTab === TABS.TRACK && trackDisplayCount < trackAll.length) {\n        setTrackDisplayCount(prev => prev + 20);\n      }\n    }\n  };\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n    container.addEventListener('scroll', handleScroll);\n    return () => container.removeEventListener('scroll', handleScroll);\n  }, [activeTab, handleScroll, artistDisplayCount, albumDisplayCount, trackDisplayCount]);\n\n  // Rendu local par tab\n  const renderArtists = () => {\n    // On affiche seulement le slice(0, artistDisplayCount)\n    const visible = artistAll.slice(0, artistDisplayCount);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"results-list\",\n      children: visible.map(artist => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"results-item\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"result-title\",\n          children: artist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, artist.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  };\n  const renderAlbums = () => {\n    const visible = albumAll.slice(0, albumDisplayCount);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"results-list\",\n      children: visible.map(album => {\n        var _album$images$;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"results-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: (_album$images$ = album.images[0]) === null || _album$images$ === void 0 ? void 0 : _album$images$.url,\n            alt: album.name,\n            className: \"result-thumbnail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"result-title\",\n            children: album.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"result-subtitle\",\n            children: album.release_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, album.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this);\n  };\n  const renderTracks = () => {\n    const visible = trackAll.slice(0, trackDisplayCount);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"results-list\",\n      children: visible.map(track => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"results-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"result-title\",\n          children: track.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"result-subtitle\",\n          children: track.artists.map(a => a.name).join(', ')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, track.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-results-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"R\\xE9sultats pour \\\"\", query, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), loadingInitial && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Chargement initial...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: activeTab === TABS.ARTIST ? 'tab-btn active' : 'tab-btn',\n        onClick: () => setActiveTab(TABS.ARTIST),\n        children: \"Artistes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: activeTab === TABS.ALBUM ? 'tab-btn active' : 'tab-btn',\n        onClick: () => setActiveTab(TABS.ALBUM),\n        children: \"Albums\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: activeTab === TABS.TRACK ? 'tab-btn active' : 'tab-btn',\n        onClick: () => setActiveTab(TABS.TRACK),\n        children: \"Titres\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-scrollable\",\n      ref: containerRef,\n      children: [!loadingInitial && activeTab === TABS.ARTIST && renderArtists(), !loadingInitial && activeTab === TABS.ALBUM && renderAlbums(), !loadingInitial && activeTab === TABS.TRACK && renderTracks(), activeTab === TABS.ARTIST && artistDisplayCount >= artistAll.length && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center',\n          color: '#777',\n          marginTop: '10px'\n        },\n        children: \"Plus de r\\xE9sultats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), activeTab === TABS.ALBUM && albumDisplayCount >= albumAll.length && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center',\n          color: '#777',\n          marginTop: '10px'\n        },\n        children: \"Plus de r\\xE9sultats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), activeTab === TABS.TRACK && trackDisplayCount >= trackAll.length && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center',\n          color: '#777',\n          marginTop: '10px'\n        },\n        children: \"Plus de r\\xE9sultats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchResults, \"ipTVz8p6I2Wb1ZFPJp7XKOk/jL0=\", false, function () {\n  return [useSearchParams];\n});\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useSearchParams","searchArtists","searchAlbums","searchTracks","jsxDEV","_jsxDEV","TABS","ARTIST","ALBUM","TRACK","SearchResults","_s","searchParams","query","get","activeTab","setActiveTab","artistAll","setArtistAll","albumAll","setAlbumAll","trackAll","setTrackAll","artistDisplayCount","setArtistDisplayCount","albumDisplayCount","setAlbumDisplayCount","trackDisplayCount","setTrackDisplayCount","loadingInitial","setLoadingInitial","containerRef","loadData","artists","albums","tracks","Promise","all","err","console","error","handleScroll","container","current","scrollTop","scrollHeight","clientHeight","length","prev","addEventListener","removeEventListener","renderArtists","visible","slice","className","children","map","artist","name","fileName","_jsxFileName","lineNumber","columnNumber","id","renderAlbums","album","_album$images$","src","images","url","alt","release_date","renderTracks","track","a","join","onClick","ref","style","textAlign","color","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/Pix/Documents/Projects/spotify-app/src/pages/SearchResults.jsx"],"sourcesContent":["// src/pages/SearchResults.jsx\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport {\r\n  searchArtists,\r\n  searchAlbums,\r\n  searchTracks,\r\n} from '../services/spotifyService';\r\nimport './SearchResults.css';\r\n\r\nconst TABS = {\r\n  ARTIST: 'artist',\r\n  ALBUM: 'album',\r\n  TRACK: 'track',\r\n};\r\n\r\nconst SearchResults = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const query = searchParams.get('q') || '';\r\n\r\n  // Onglet actif : \"artist\" (par défaut), \"album\", ou \"track\"\r\n  const [activeTab, setActiveTab] = useState(TABS.ARTIST);\r\n\r\n  // Les tableaux complets renvoyés par l'API\r\n  const [artistAll, setArtistAll] = useState([]);\r\n  const [albumAll, setAlbumAll] = useState([]);\r\n  const [trackAll, setTrackAll] = useState([]);\r\n\r\n  // Nombre d'éléments actuellement affichés (pagination locale)\r\n  const [artistDisplayCount, setArtistDisplayCount] = useState(20);\r\n  const [albumDisplayCount, setAlbumDisplayCount] = useState(20);\r\n  const [trackDisplayCount, setTrackDisplayCount] = useState(20);\r\n\r\n  // Chargement initial\r\n  const [loadingInitial, setLoadingInitial] = useState(false);\r\n\r\n  // Référence pour le conteneur scrollable\r\n  const containerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      if (!query) return;\r\n      setLoadingInitial(true);\r\n      try {\r\n        // Les fonctions searchArtists, searchAlbums, searchTracks renvoient directement des tableaux\r\n        // par ex: [ {...}, {...}, ... ]\r\n        const [artists, albums, tracks] = await Promise.all([\r\n          searchArtists(query),\r\n          searchAlbums(query),\r\n          searchTracks(query),\r\n        ]);\r\n\r\n        // Stockage complet\r\n        setArtistAll(artists || []);\r\n        setAlbumAll(albums || []);\r\n        setTrackAll(tracks || []);\r\n\r\n        // On réinitialise le count\r\n        setArtistDisplayCount(20);\r\n        setAlbumDisplayCount(20);\r\n        setTrackDisplayCount(20);\r\n      } catch (err) {\r\n        console.error('Erreur lors de la recherche :', err);\r\n      } finally {\r\n        setLoadingInitial(false);\r\n      }\r\n    };\r\n    loadData();\r\n  }, [query]);\r\n\r\n  // handleScroll : si on est proche du bas, on augmente la pagination du tab actif\r\n  const handleScroll = () => {\r\n    const container = containerRef.current;\r\n    if (!container) return;\r\n    const scrollTop = container.scrollTop;\r\n    const scrollHeight = container.scrollHeight;\r\n    const clientHeight = container.clientHeight;\r\n    \r\n    // ~100px avant la fin\r\n    if (scrollTop + clientHeight >= scrollHeight - 100) {\r\n      // On incrémente le displayCount du tab actif\r\n      if (activeTab === TABS.ARTIST && artistDisplayCount < artistAll.length) {\r\n        setArtistDisplayCount(prev => prev + 20);\r\n      } else if (activeTab === TABS.ALBUM && albumDisplayCount < albumAll.length) {\r\n        setAlbumDisplayCount(prev => prev + 20);\r\n      } else if (activeTab === TABS.TRACK && trackDisplayCount < trackAll.length) {\r\n        setTrackDisplayCount(prev => prev + 20);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const container = containerRef.current;\r\n    if (!container) return;\r\n    container.addEventListener('scroll', handleScroll);\r\n    return () => container.removeEventListener('scroll', handleScroll);\r\n  }, [activeTab, handleScroll, artistDisplayCount, albumDisplayCount, trackDisplayCount]);\r\n\r\n  // Rendu local par tab\r\n  const renderArtists = () => {\r\n    // On affiche seulement le slice(0, artistDisplayCount)\r\n    const visible = artistAll.slice(0, artistDisplayCount);\r\n    return (\r\n      <ul className=\"results-list\">\r\n        {visible.map((artist) => (\r\n          <li key={artist.id} className=\"results-item\">\r\n            <span className=\"result-title\">{artist.name}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  const renderAlbums = () => {\r\n    const visible = albumAll.slice(0, albumDisplayCount);\r\n    return (\r\n      <ul className=\"results-list\">\r\n        {visible.map((album) => (\r\n          <li key={album.id} className=\"results-item\">\r\n            <img\r\n              src={album.images[0]?.url}\r\n              alt={album.name}\r\n              className=\"result-thumbnail\"\r\n            />\r\n            <span className=\"result-title\">{album.name}</span>\r\n            <span className=\"result-subtitle\">{album.release_date}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  const renderTracks = () => {\r\n    const visible = trackAll.slice(0, trackDisplayCount);\r\n    return (\r\n      <ul className=\"results-list\">\r\n        {visible.map((track) => (\r\n          <li key={track.id} className=\"results-item\">\r\n            <span className=\"result-title\">{track.name}</span>\r\n            <span className=\"result-subtitle\">\r\n              {track.artists.map((a) => a.name).join(', ')}\r\n            </span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-results-container\">\r\n      <h2>Résultats pour \"{query}\"</h2>\r\n      {loadingInitial && <p>Chargement initial...</p>}\r\n\r\n      {/* Menu de tabs */}\r\n      <div className=\"tabs-menu\">\r\n        <button\r\n          className={activeTab === TABS.ARTIST ? 'tab-btn active' : 'tab-btn'}\r\n          onClick={() => setActiveTab(TABS.ARTIST)}\r\n        >\r\n          Artistes\r\n        </button>\r\n        <button\r\n          className={activeTab === TABS.ALBUM ? 'tab-btn active' : 'tab-btn'}\r\n          onClick={() => setActiveTab(TABS.ALBUM)}\r\n        >\r\n          Albums\r\n        </button>\r\n        <button\r\n          className={activeTab === TABS.TRACK ? 'tab-btn active' : 'tab-btn'}\r\n          onClick={() => setActiveTab(TABS.TRACK)}\r\n        >\r\n          Titres\r\n        </button>\r\n      </div>\r\n\r\n      {/* Container scrollable */}\r\n      <div className=\"results-scrollable\" ref={containerRef}>\r\n        {!loadingInitial && activeTab === TABS.ARTIST && renderArtists()}\r\n        {!loadingInitial && activeTab === TABS.ALBUM && renderAlbums()}\r\n        {!loadingInitial && activeTab === TABS.TRACK && renderTracks()}\r\n\r\n        {/* Affiche un message quand on a déjà chargé tout */}\r\n        {activeTab === TABS.ARTIST && artistDisplayCount >= artistAll.length && (\r\n          <p style={{ textAlign: 'center', color: '#777', marginTop: '10px' }}>\r\n            Plus de résultats\r\n          </p>\r\n        )}\r\n        {activeTab === TABS.ALBUM && albumDisplayCount >= albumAll.length && (\r\n          <p style={{ textAlign: 'center', color: '#777', marginTop: '10px' }}>\r\n            Plus de résultats\r\n          </p>\r\n        )}\r\n        {activeTab === TABS.TRACK && trackDisplayCount >= trackAll.length && (\r\n          <p style={{ textAlign: 'center', color: '#777', marginTop: '10px' }}>\r\n            Plus de résultats\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}