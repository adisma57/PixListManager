{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pix\\\\Documents\\\\Projects\\\\spotify-app\\\\src\\\\components\\\\AlbumDisplay.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getAlbumTracks } from '../services/spotifyService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlbumDisplay = ({\n  album,\n  onBack\n}) => {\n  _s();\n  var _album$images$;\n  const [tracks, setTracks] = useState([]);\n  useEffect(() => {\n    async function fetchTracks() {\n      const data = await getAlbumTracks(album.id);\n      setTracks(data);\n    }\n    fetchTracks();\n  }, [album.id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onBack,\n      children: \"Retour\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [album.name, \" (\", album.release_date.substring(0, 4), \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: (_album$images$ = album.images[0]) === null || _album$images$ === void 0 ? void 0 : _album$images$.url,\n      alt: album.name,\n      style: {\n        width: '200px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Chansons :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tracks.map(track => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [track.track_number, \". \", track.name]\n      }, track.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(AlbumDisplay, \"f0kRKS0z35esRkLUBB+Oc19rjkA=\");\n_c = AlbumDisplay;\nexport default AlbumDisplay;\nvar _c;\n$RefreshReg$(_c, \"AlbumDisplay\");","map":{"version":3,"names":["React","useState","useEffect","getAlbumTracks","jsxDEV","_jsxDEV","AlbumDisplay","album","onBack","_s","_album$images$","tracks","setTracks","fetchTracks","data","id","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","name","release_date","substring","src","images","url","alt","style","width","map","track","track_number","_c","$RefreshReg$"],"sources":["C:/Users/Pix/Documents/Projects/spotify-app/src/components/AlbumDisplay.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getAlbumTracks } from '../services/spotifyService';\r\n\r\nconst AlbumDisplay = ({ album, onBack }) => {\r\n  const [tracks, setTracks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchTracks() {\r\n      const data = await getAlbumTracks(album.id);\r\n      setTracks(data);\r\n    }\r\n    fetchTracks();\r\n  }, [album.id]);\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={onBack}>Retour</button>\r\n      <h2>{album.name} ({album.release_date.substring(0,4)})</h2>\r\n      <img src={album.images[0]?.url} alt={album.name} style={{ width: '200px' }} />\r\n      <h3>Chansons :</h3>\r\n      <ul>\r\n        {tracks.map(track => (\r\n          <li key={track.id}>{track.track_number}. {track.name}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlbumDisplay;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,YAAY,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,cAAA;EAC1C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,eAAeW,WAAWA,CAAA,EAAG;MAC3B,MAAMC,IAAI,GAAG,MAAMX,cAAc,CAACI,KAAK,CAACQ,EAAE,CAAC;MAC3CH,SAAS,CAACE,IAAI,CAAC;IACjB;IACAD,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACN,KAAK,CAACQ,EAAE,CAAC,CAAC;EAEd,oBACEV,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAQY,OAAO,EAAET,MAAO;MAAAQ,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACxChB,OAAA;MAAAW,QAAA,GAAKT,KAAK,CAACe,IAAI,EAAC,IAAE,EAACf,KAAK,CAACgB,YAAY,CAACC,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,GAAC;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3DhB,OAAA;MAAKoB,GAAG,GAAAf,cAAA,GAAEH,KAAK,CAACmB,MAAM,CAAC,CAAC,CAAC,cAAAhB,cAAA,uBAAfA,cAAA,CAAiBiB,GAAI;MAACC,GAAG,EAAErB,KAAK,CAACe,IAAK;MAACO,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAQ;IAAE;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9EhB,OAAA;MAAAW,QAAA,EAAI;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBhB,OAAA;MAAAW,QAAA,EACGL,MAAM,CAACoB,GAAG,CAACC,KAAK,iBACf3B,OAAA;QAAAW,QAAA,GAAoBgB,KAAK,CAACC,YAAY,EAAC,IAAE,EAACD,KAAK,CAACV,IAAI;MAAA,GAA3CU,KAAK,CAACjB,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAwC,CAC1D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACZ,EAAA,CAxBIH,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AA0BlB,eAAeA,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}