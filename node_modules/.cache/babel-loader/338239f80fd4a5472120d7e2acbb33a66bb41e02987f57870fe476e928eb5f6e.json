{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pix\\\\Documents\\\\Projects\\\\spotify-app\\\\src\\\\pages\\\\SearchResults.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchArtists, searchTracks, getArtistAlbums } from '../services/spotifyService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchResults = () => {\n  _s();\n  const [params] = useSearchParams();\n  const type = params.get('type');\n  const query = params.get('q');\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const search = async () => {\n      setLoading(true);\n      try {\n        if (type === 'artist') {\n          const res = await searchArtists(query);\n          setResults(res);\n        } else if (type === 'track') {\n          const res = await searchTracks(query);\n          setResults(res);\n        } else if (type === 'album') {\n          const res = await getArtistAlbums(query); // à remplacer selon ton service API\n          setResults(res);\n        }\n      } catch (err) {\n        console.error('Erreur lors de la recherche :', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (query) {\n      search();\n    }\n  }, [type, query]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"R\\xE9sultats pour \\\"\", query, \"\\\" (\", type, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: results.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item.name\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchResults, \"OOM6swHQ5eZxTrHsZGZNDd/2fFM=\", false, function () {\n  return [useSearchParams];\n});\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["React","useEffect","useState","useSearchParams","searchArtists","searchTracks","getArtistAlbums","jsxDEV","_jsxDEV","SearchResults","_s","params","type","get","query","results","setResults","loading","setLoading","search","res","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","name","id","_c","$RefreshReg$"],"sources":["C:/Users/Pix/Documents/Projects/spotify-app/src/pages/SearchResults.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { searchArtists, searchTracks, getArtistAlbums } from '../services/spotifyService';\r\n\r\nconst SearchResults = () => {\r\n  const [params] = useSearchParams();\r\n  const type = params.get('type');\r\n  const query = params.get('q');\r\n  const [results, setResults] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const search = async () => {\r\n      setLoading(true);\r\n      try {\r\n        if (type === 'artist') {\r\n          const res = await searchArtists(query);\r\n          setResults(res);\r\n        } else if (type === 'track') {\r\n          const res = await searchTracks(query);\r\n          setResults(res);\r\n        } else if (type === 'album') {\r\n          const res = await getArtistAlbums(query); // à remplacer selon ton service API\r\n          setResults(res);\r\n        }\r\n      } catch (err) {\r\n        console.error('Erreur lors de la recherche :', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (query) {\r\n      search();\r\n    }\r\n  }, [type, query]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Résultats pour \"{query}\" ({type})</h2>\r\n      {loading ? (\r\n        <p>Chargement...</p>\r\n      ) : (\r\n        <ul>\r\n          {results.map((item) => (\r\n            <li key={item.id}>{item.name}</li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,eAAe,QAAQ,kBAAkB;AAClD,SAASC,aAAa,EAAEC,YAAY,EAAEC,eAAe,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1F,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,CAAC,GAAGR,eAAe,CAAC,CAAC;EAClC,MAAMS,IAAI,GAAGD,MAAM,CAACE,GAAG,CAAC,MAAM,CAAC;EAC/B,MAAMC,KAAK,GAAGH,MAAM,CAACE,GAAG,CAAC,GAAG,CAAC;EAC7B,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMkB,MAAM,GAAG,MAAAA,CAAA,KAAY;MACzBD,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACF,IAAIN,IAAI,KAAK,QAAQ,EAAE;UACrB,MAAMQ,GAAG,GAAG,MAAMhB,aAAa,CAACU,KAAK,CAAC;UACtCE,UAAU,CAACI,GAAG,CAAC;QACjB,CAAC,MAAM,IAAIR,IAAI,KAAK,OAAO,EAAE;UAC3B,MAAMQ,GAAG,GAAG,MAAMf,YAAY,CAACS,KAAK,CAAC;UACrCE,UAAU,CAACI,GAAG,CAAC;QACjB,CAAC,MAAM,IAAIR,IAAI,KAAK,OAAO,EAAE;UAC3B,MAAMQ,GAAG,GAAG,MAAMd,eAAe,CAACQ,KAAK,CAAC,CAAC,CAAC;UAC1CE,UAAU,CAACI,GAAG,CAAC;QACjB;MACF,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEF,GAAG,CAAC;MACrD,CAAC,SAAS;QACRH,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAED,IAAIJ,KAAK,EAAE;MACTK,MAAM,CAAC,CAAC;IACV;EACF,CAAC,EAAE,CAACP,IAAI,EAAEE,KAAK,CAAC,CAAC;EAEjB,oBACEN,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,GAAI,sBAAgB,EAACV,KAAK,EAAC,MAAG,EAACF,IAAI,EAAC,GAAC;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzCX,OAAO,gBACNT,OAAA;MAAAgB,QAAA,EAAG;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEpBpB,OAAA;MAAAgB,QAAA,EACGT,OAAO,CAACc,GAAG,CAAEC,IAAI,iBAChBtB,OAAA;QAAAgB,QAAA,EAAmBM,IAAI,CAACC;MAAI,GAAnBD,IAAI,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAClC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClB,EAAA,CA/CID,aAAa;EAAA,QACAN,eAAe;AAAA;AAAA8B,EAAA,GAD5BxB,aAAa;AAiDnB,eAAeA,aAAa;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}