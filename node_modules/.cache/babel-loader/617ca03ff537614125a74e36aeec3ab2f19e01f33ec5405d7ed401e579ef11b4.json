{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pix\\\\Documents\\\\Projects\\\\spotify-app\\\\src\\\\pages\\\\PlaylistPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getUserPlaylists } from '../services/spotifyService';\nimport { useNavigate } from 'react-router-dom';\nimport './PlaylistPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlaylistPage = () => {\n  _s();\n  const [playlists, setPlaylists] = useState([]);\n  const [sortCriteria, setSortCriteria] = useState(''); // Par défaut, aucun tri\n  const [sortDirection, setSortDirection] = useState('asc');\n  const [searchQuery, setSearchQuery] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchPlaylists = async () => {\n      try {\n        const data = await getUserPlaylists();\n        setPlaylists(data);\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des playlists :\", error);\n      }\n    };\n    fetchPlaylists();\n  }, []);\n  const handleSort = criteria => {\n    if (sortCriteria === criteria) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortCriteria(criteria);\n      setSortDirection('asc');\n    }\n  };\n\n  // Filtre les playlists selon le texte de recherche (nom)\n  const filteredPlaylists = playlists.filter(pl => pl.name.toLowerCase().includes(searchQuery.toLowerCase()));\n\n  // Si aucun critère de tri n'est défini, on affiche l'ordre d'origine\n  const displayedPlaylists = sortCriteria ? [...filteredPlaylists].sort((a, b) => {\n    let valueA, valueB;\n    switch (sortCriteria) {\n      case 'name':\n        valueA = a.name.toLowerCase();\n        valueB = b.name.toLowerCase();\n        break;\n      case 'nbChansons':\n        valueA = a.tracks.total;\n        valueB = b.tracks.total;\n        break;\n      default:\n        valueA = a.name.toLowerCase();\n        valueB = b.name.toLowerCase();\n    }\n    if (valueA < valueB) return sortDirection === 'asc' ? -1 : 1;\n    if (valueA > valueB) return sortDirection === 'asc' ? 1 : -1;\n    return 0;\n  }) : filteredPlaylists;\n  const handleRowClick = playlistId => {\n    navigate(`/playlists/${playlistId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playlist-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Mes Playlists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Rechercher une playlist...\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"playlist-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('name'),\n            children: [\"Nom \", sortCriteria === 'name' ? sortDirection === 'asc' ? '▲' : '▼' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('nbChansons'),\n            children: [\"Nombre de chansons \", sortCriteria === 'nbChansons' ? sortDirection === 'asc' ? '▲' : '▼' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: displayedPlaylists.map(pl => {\n          var _pl$images$;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            onClick: () => handleRowClick(pl.id),\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: ((_pl$images$ = pl.images[0]) === null || _pl$images$ === void 0 ? void 0 : _pl$images$.url) || '/default-playlist.png',\n                alt: pl.name,\n                className: \"playlist-thumbnail\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: pl.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: pl.tracks.total\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, pl.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(PlaylistPage, \"+yGz9nIOzYPFy5YaQKnNISvFBlY=\", false, function () {\n  return [useNavigate];\n});\n_c = PlaylistPage;\nexport default PlaylistPage;\nvar _c;\n$RefreshReg$(_c, \"PlaylistPage\");","map":{"version":3,"names":["React","useState","useEffect","getUserPlaylists","useNavigate","jsxDEV","_jsxDEV","PlaylistPage","_s","playlists","setPlaylists","sortCriteria","setSortCriteria","sortDirection","setSortDirection","searchQuery","setSearchQuery","navigate","fetchPlaylists","data","error","console","handleSort","criteria","filteredPlaylists","filter","pl","name","toLowerCase","includes","displayedPlaylists","sort","a","b","valueA","valueB","tracks","total","handleRowClick","playlistId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","_pl$images$","id","src","images","url","alt","_c","$RefreshReg$"],"sources":["C:/Users/Pix/Documents/Projects/spotify-app/src/pages/PlaylistPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getUserPlaylists } from '../services/spotifyService';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './PlaylistPage.css';\r\n\r\nconst PlaylistPage = () => {\r\n  const [playlists, setPlaylists] = useState([]);\r\n  const [sortCriteria, setSortCriteria] = useState(''); // Par défaut, aucun tri\r\n  const [sortDirection, setSortDirection] = useState('asc');\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchPlaylists = async () => {\r\n      try {\r\n        const data = await getUserPlaylists();\r\n        setPlaylists(data);\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la récupération des playlists :\", error);\r\n      }\r\n    };\r\n    fetchPlaylists();\r\n  }, []);\r\n\r\n  const handleSort = (criteria) => {\r\n    if (sortCriteria === criteria) {\r\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortCriteria(criteria);\r\n      setSortDirection('asc');\r\n    }\r\n  };\r\n\r\n  // Filtre les playlists selon le texte de recherche (nom)\r\n  const filteredPlaylists = playlists.filter(pl =>\r\n    pl.name.toLowerCase().includes(searchQuery.toLowerCase())\r\n  );\r\n\r\n  // Si aucun critère de tri n'est défini, on affiche l'ordre d'origine\r\n  const displayedPlaylists = sortCriteria\r\n    ? [...filteredPlaylists].sort((a, b) => {\r\n        let valueA, valueB;\r\n        switch (sortCriteria) {\r\n          case 'name':\r\n            valueA = a.name.toLowerCase();\r\n            valueB = b.name.toLowerCase();\r\n            break;\r\n          case 'nbChansons':\r\n            valueA = a.tracks.total;\r\n            valueB = b.tracks.total;\r\n            break;\r\n          default:\r\n            valueA = a.name.toLowerCase();\r\n            valueB = b.name.toLowerCase();\r\n        }\r\n        if (valueA < valueB) return sortDirection === 'asc' ? -1 : 1;\r\n        if (valueA > valueB) return sortDirection === 'asc' ? 1 : -1;\r\n        return 0;\r\n      })\r\n    : filteredPlaylists;\r\n\r\n  const handleRowClick = (playlistId) => {\r\n    navigate(`/playlists/${playlistId}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"playlist-page\">\r\n      <h1>Mes Playlists</h1>\r\n      <div className=\"search-bar\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Rechercher une playlist...\"\r\n          value={searchQuery}\r\n          onChange={(e) => setSearchQuery(e.target.value)}\r\n        />\r\n      </div>\r\n      <table className=\"playlist-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Image</th>\r\n            <th onClick={() => handleSort('name')}>\r\n              Nom {sortCriteria === 'name' ? (sortDirection === 'asc' ? '▲' : '▼') : ''}\r\n            </th>\r\n            <th onClick={() => handleSort('nbChansons')}>\r\n              Nombre de chansons {sortCriteria === 'nbChansons' ? (sortDirection === 'asc' ? '▲' : '▼') : ''}\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {displayedPlaylists.map(pl => (\r\n            <tr key={pl.id} onClick={() => handleRowClick(pl.id)}>\r\n              <td>\r\n                <img\r\n                  src={pl.images[0]?.url || '/default-playlist.png'}\r\n                  alt={pl.name}\r\n                  className=\"playlist-thumbnail\"\r\n                />\r\n              </td>\r\n              <td>{pl.name}</td>\r\n              <td>{pl.tracks.total}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlaylistPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}