{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pix\\\\Documents\\\\Projects\\\\spotify-app\\\\src\\\\pages\\\\ArtistDetail.jsx\",\n  _s = $RefreshSig$();\n// src/pages/ArtistDetail.jsx\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { getArtistInfo, getArtistAlbums } from '../services/spotifyService';\nimport './ArtistDetail.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArtistDetail = () => {\n  _s();\n  var _artist$genres;\n  const {\n    id\n  } = useParams(); // ID de l'artiste\n  const [artist, setArtist] = useState(null);\n  const [albums, setAlbums] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchArtistData = async () => {\n      setLoading(true);\n      try {\n        // 1. Récupérer les infos de l'artiste\n        const artistData = await getArtistInfo(id);\n        setArtist(artistData);\n\n        // 2. Récupérer ses albums\n        const albumsData = await getArtistAlbums(id);\n        setAlbums(albumsData);\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération de l'artiste :\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchArtistData();\n  }, [id]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"artist-detail loading-state\",\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n  if (!artist) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"artist-detail error-state\",\n      children: \"Artiste non trouv\\xE9.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Genres (tableau) -> on affiche seulement quelques genres\n  const displayedGenres = (_artist$genres = artist.genres) === null || _artist$genres === void 0 ? void 0 : _artist$genres.slice(0, 3).join(', ');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"artist-detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"artist-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"artist-photo\",\n        children: artist.images && artist.images.length > 0 ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: artist.images[0].url,\n          alt: artist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/default-artist.png\",\n          alt: artist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"artist-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"artist-name\",\n          children: artist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), displayedGenres && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"artist-genres\",\n          children: [\"Genres : \", displayedGenres]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), artist.popularity !== undefined && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"artist-popularity\",\n          children: [\"Popularit\\xE9 : \", artist.popularity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"artist-albums\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"albums-title\",\n        children: \"Albums\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), albums.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-albums\",\n        children: \"Aucun album trouv\\xE9.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"albums-list\",\n        children: albums.map(album => {\n          var _album$images$, _album$release_date;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"album-item\",\n            onClick: () => navigate(`/album/${album.id}`),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: ((_album$images$ = album.images[0]) === null || _album$images$ === void 0 ? void 0 : _album$images$.url) || '/default-album.png',\n              alt: album.name,\n              className: \"album-cover\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"album-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"album-name\",\n                children: album.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"album-year\",\n                children: (_album$release_date = album.release_date) === null || _album$release_date === void 0 ? void 0 : _album$release_date.substring(0, 4)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)]\n          }, album.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(ArtistDetail, \"P8LFsLzX+6zehqbfbqd37WK8nAM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ArtistDetail;\nexport default ArtistDetail;\nvar _c;\n$RefreshReg$(_c, \"ArtistDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","getArtistInfo","getArtistAlbums","jsxDEV","_jsxDEV","ArtistDetail","_s","_artist$genres","id","artist","setArtist","albums","setAlbums","loading","setLoading","navigate","fetchArtistData","artistData","albumsData","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","displayedGenres","genres","slice","join","images","length","src","url","alt","name","popularity","undefined","map","album","_album$images$","_album$release_date","onClick","release_date","substring","_c","$RefreshReg$"],"sources":["C:/Users/Pix/Documents/Projects/spotify-app/src/pages/ArtistDetail.jsx"],"sourcesContent":["// src/pages/ArtistDetail.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport {\r\n  getArtistInfo,\r\n  getArtistAlbums\r\n} from '../services/spotifyService';\r\nimport './ArtistDetail.css';\r\n\r\nconst ArtistDetail = () => {\r\n  const { id } = useParams(); // ID de l'artiste\r\n  const [artist, setArtist] = useState(null);\r\n  const [albums, setAlbums] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchArtistData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        // 1. Récupérer les infos de l'artiste\r\n        const artistData = await getArtistInfo(id);\r\n        setArtist(artistData);\r\n\r\n        // 2. Récupérer ses albums\r\n        const albumsData = await getArtistAlbums(id);\r\n        setAlbums(albumsData);\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la récupération de l'artiste :\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchArtistData();\r\n  }, [id]);\r\n\r\n  if (loading) {\r\n    return <div className=\"artist-detail loading-state\">Chargement...</div>;\r\n  }\r\n\r\n  if (!artist) {\r\n    return <div className=\"artist-detail error-state\">Artiste non trouvé.</div>;\r\n  }\r\n\r\n  // Genres (tableau) -> on affiche seulement quelques genres\r\n  const displayedGenres = artist.genres?.slice(0, 3).join(', ');\r\n\r\n  return (\r\n    <div className=\"artist-detail\">\r\n      <header className=\"artist-header\">\r\n        <div className=\"artist-photo\">\r\n          {artist.images && artist.images.length > 0 ? (\r\n            <img\r\n              src={artist.images[0].url}\r\n              alt={artist.name}\r\n            />\r\n          ) : (\r\n            <img\r\n              src=\"/default-artist.png\"\r\n              alt={artist.name}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"artist-info\">\r\n          <h1 className=\"artist-name\">{artist.name}</h1>\r\n          {displayedGenres && (\r\n            <p className=\"artist-genres\">\r\n              Genres : {displayedGenres}\r\n            </p>\r\n          )}\r\n          {artist.popularity !== undefined && (\r\n            <p className=\"artist-popularity\">Popularité : {artist.popularity}</p>\r\n          )}\r\n          {/* Ajoutez d'autres champs si nécessaire (followers, etc.) */}\r\n        </div>\r\n      </header>\r\n\r\n      <section className=\"artist-albums\">\r\n        <h2 className=\"albums-title\">Albums</h2>\r\n        {albums.length === 0 ? (\r\n          <p className=\"no-albums\">Aucun album trouvé.</p>\r\n        ) : (\r\n          <ul className=\"albums-list\">\r\n            {albums.map((album) => (\r\n              <li\r\n                key={album.id}\r\n                className=\"album-item\"\r\n                onClick={() => navigate(`/album/${album.id}`)}\r\n              >\r\n                <img\r\n                  src={album.images[0]?.url || '/default-album.png'}\r\n                  alt={album.name}\r\n                  className=\"album-cover\"\r\n                />\r\n                <div className=\"album-meta\">\r\n                  <span className=\"album-name\">{album.name}</span>\r\n                  <span className=\"album-year\">{album.release_date?.substring(0, 4)}</span>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArtistDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}