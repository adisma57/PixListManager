{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pix\\\\Documents\\\\Projects\\\\spotify-app\\\\src\\\\pages\\\\ArtistPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getArtistAlbums } from '../services/spotifyService';\nimport AddAlbumToPlaylistModal from '../components/AddAlbumToPlaylistModal';\nimport './ArtistPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArtistPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [albums, setAlbums] = useState([]);\n  const [selectedAlbum, setSelectedAlbum] = useState(null);\n  const [includeLive, setIncludeLive] = useState(true);\n  const [selectedAlbums, setSelectedAlbums] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  useEffect(() => {\n    const fetchAlbums = async () => {\n      try {\n        const data = await getArtistAlbums(id, includeLive);\n        setAlbums(data);\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des albums:\", error);\n      }\n    };\n    fetchAlbums();\n  }, [id, includeLive]);\n  const toggleSelectAlbum = album => {\n    if (selectedAlbums.some(a => a.id === album.id)) {\n      setSelectedAlbums(selectedAlbums.filter(a => a.id !== album.id));\n    } else {\n      setSelectedAlbums([...selectedAlbums, album]);\n    }\n  };\n  const toggleSelectAll = () => {\n    if (selectedAlbums.length === albums.length) {\n      setSelectedAlbums([]);\n    } else {\n      setSelectedAlbums(albums);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"artist-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Albums\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"artist-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: includeLive,\n          onChange: () => setIncludeLive(!includeLive)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), \"Inclure les albums live\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleSelectAll,\n        children: selectedAlbums.length === albums.length ? 'Désélectionner tous' : 'Sélectionner tous'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"albums-grid\",\n      children: albums.map(album => {\n        var _album$images$;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"album-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: (_album$images$ = album.images[0]) === null || _album$images$ === void 0 ? void 0 : _album$images$.url,\n            alt: album.name,\n            className: \"album-image\",\n            onClick: () => setSelectedAlbum(album)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"album-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"album-name\",\n              children: album.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"album-year\",\n              children: album.release_date.substring(0, 4)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedAlbums.some(a => a.id === album.id),\n            onChange: () => toggleSelectAlbum(album),\n            className: \"album-checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, album.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), selectedAlbums.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-albums-action\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowModal(true),\n        children: \"Ajouter les albums s\\xE9lectionn\\xE9s \\xE0 une playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), selectedAlbum && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"album-details-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedAlbum.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedAlbum(null),\n        children: \"Fermer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), showModal && /*#__PURE__*/_jsxDEV(AddAlbumToPlaylistModal, {\n      selectedAlbums: selectedAlbums,\n      onClose: () => {\n        setShowModal(false);\n        setSelectedAlbums([]);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(ArtistPage, \"uDKNGxNEWWJe701W16D/6q+Z92E=\", false, function () {\n  return [useParams];\n});\n_c = ArtistPage;\nexport default ArtistPage;\nvar _c;\n$RefreshReg$(_c, \"ArtistPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","getArtistAlbums","AddAlbumToPlaylistModal","jsxDEV","_jsxDEV","ArtistPage","_s","id","albums","setAlbums","selectedAlbum","setSelectedAlbum","includeLive","setIncludeLive","selectedAlbums","setSelectedAlbums","showModal","setShowModal","fetchAlbums","data","error","console","toggleSelectAlbum","album","some","a","filter","toggleSelectAll","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","onClick","map","_album$images$","src","images","url","alt","name","release_date","substring","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Pix/Documents/Projects/spotify-app/src/pages/ArtistPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getArtistAlbums } from '../services/spotifyService';\r\nimport AddAlbumToPlaylistModal from '../components/AddAlbumToPlaylistModal';\r\nimport './ArtistPage.css';\r\n\r\nconst ArtistPage = () => {\r\n  const { id } = useParams();\r\n  const [albums, setAlbums] = useState([]);\r\n  const [selectedAlbum, setSelectedAlbum] = useState(null);\r\n  const [includeLive, setIncludeLive] = useState(true);\r\n  const [selectedAlbums, setSelectedAlbums] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchAlbums = async () => {\r\n      try {\r\n        const data = await getArtistAlbums(id, includeLive);\r\n        setAlbums(data);\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la récupération des albums:\", error);\r\n      }\r\n    };\r\n    fetchAlbums();\r\n  }, [id, includeLive]);\r\n\r\n  const toggleSelectAlbum = (album) => {\r\n    if (selectedAlbums.some(a => a.id === album.id)) {\r\n      setSelectedAlbums(selectedAlbums.filter(a => a.id !== album.id));\r\n    } else {\r\n      setSelectedAlbums([...selectedAlbums, album]);\r\n    }\r\n  };\r\n\r\n  const toggleSelectAll = () => {\r\n    if (selectedAlbums.length === albums.length) {\r\n      setSelectedAlbums([]);\r\n    } else {\r\n      setSelectedAlbums(albums);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"artist-page\">\r\n      <h1>Albums</h1>\r\n      <div className=\"artist-controls\">\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={includeLive}\r\n            onChange={() => setIncludeLive(!includeLive)}\r\n          />\r\n          Inclure les albums live\r\n        </label>\r\n        <button onClick={toggleSelectAll}>\r\n          {selectedAlbums.length === albums.length ? 'Désélectionner tous' : 'Sélectionner tous'}\r\n        </button>\r\n      </div>\r\n      <div className=\"albums-grid\">\r\n        {albums.map(album => (\r\n          <div key={album.id} className=\"album-card\">\r\n            <img\r\n              src={album.images[0]?.url}\r\n              alt={album.name}\r\n              className=\"album-image\"\r\n              onClick={() => setSelectedAlbum(album)}\r\n            />\r\n            <div className=\"album-info\">\r\n              <span className=\"album-name\">{album.name}</span>\r\n              <span className=\"album-year\">{album.release_date.substring(0, 4)}</span>\r\n            </div>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={selectedAlbums.some(a => a.id === album.id)}\r\n              onChange={() => toggleSelectAlbum(album)}\r\n              className=\"album-checkbox\"\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {selectedAlbums.length > 0 && (\r\n        <div className=\"add-albums-action\">\r\n          <button onClick={() => setShowModal(true)}>\r\n            Ajouter les albums sélectionnés à une playlist\r\n          </button>\r\n        </div>\r\n      )}\r\n      {selectedAlbum && (\r\n        <div className=\"album-details-modal\">\r\n          <h2>{selectedAlbum.name}</h2>\r\n          <button onClick={() => setSelectedAlbum(null)}>Fermer</button>\r\n        </div>\r\n      )}\r\n      {showModal && (\r\n        <AddAlbumToPlaylistModal\r\n          selectedAlbums={selectedAlbums}\r\n          onClose={() => {\r\n            setShowModal(false);\r\n            setSelectedAlbums([]);\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArtistPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}