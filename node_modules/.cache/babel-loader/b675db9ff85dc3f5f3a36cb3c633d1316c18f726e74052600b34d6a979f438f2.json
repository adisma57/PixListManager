{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pix\\\\Documents\\\\Projects\\\\spotify-app\\\\src\\\\pages\\\\PlaylistDetails.jsx\",\n  _s = $RefreshSig$();\n// src/pages/PlaylistDetails.jsx\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { getPlaylistInfo, getAllPlaylistTracks, removeTrackFromPlaylist, reorderPlaylistTracks, deletePlaylist, setPlaylistOrder } from '../services/spotifyService';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { FaGripVertical, FaTimes } from 'react-icons/fa';\nimport './PlaylistDetails.css';\n\n// Fonction de mélange (Fisher–Yates)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst shuffleArray = array => {\n  const newArray = [...array];\n  for (let i = newArray.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [newArray[i], newArray[j]] = [newArray[j], newArray[i]];\n  }\n  return newArray;\n};\nconst PlaylistDetails = () => {\n  _s();\n  var _playlistInfo$images;\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [playlistInfo, setPlaylistInfo] = useState(null);\n  const [allTracks, setAllTracks] = useState([]); // Toutes les pistes de la playlist\n  const [loadingInfo, setLoadingInfo] = useState(true);\n  const [loadingTracks, setLoadingTracks] = useState(true);\n  const [loadingDelete, setLoadingDelete] = useState(false);\n  const [loadingRandom, setLoadingRandom] = useState(false);\n  const [totalDurationMs, setTotalDurationMs] = useState(0);\n\n  // Pour le scroll infini (affichage local)\n  const [displayCount, setDisplayCount] = useState(20);\n  const containerRef = useRef(null);\n\n  // Chargement des infos de la playlist (nom, description, images)\n  useEffect(() => {\n    const loadInfo = async () => {\n      setLoadingInfo(true);\n      try {\n        const info = await getPlaylistInfo(id);\n        setPlaylistInfo(info);\n      } catch (err) {\n        console.error(\"Erreur getPlaylistInfo :\", err);\n      } finally {\n        setLoadingInfo(false);\n      }\n    };\n    loadInfo();\n  }, [id]);\n\n  // Chargement de toutes les pistes de la playlist via pagination\n  useEffect(() => {\n    const loadTracks = async () => {\n      setLoadingTracks(true);\n      try {\n        const tracksData = await getAllPlaylistTracks(id);\n        setAllTracks(tracksData);\n        let total = 0;\n        tracksData.forEach(item => {\n          var _item$track;\n          if ((_item$track = item.track) !== null && _item$track !== void 0 && _item$track.duration_ms) {\n            total += item.track.duration_ms;\n          }\n        });\n        setTotalDurationMs(total);\n      } catch (err) {\n        console.error(\"Erreur getAllPlaylistTracks :\", err);\n      } finally {\n        setLoadingTracks(false);\n      }\n    };\n    loadTracks();\n  }, [id]);\n\n  // Gestion du scroll infini (affichage local)\n  const handleScroll = () => {\n    const container = containerRef.current;\n    if (!container) return;\n    const scrollTop = container.scrollTop;\n    const scrollHeight = container.scrollHeight;\n    const clientHeight = container.clientHeight;\n    if (scrollTop + clientHeight >= scrollHeight - 100) {\n      if (displayCount < allTracks.length) {\n        setDisplayCount(prev => prev + 20);\n      }\n    }\n  };\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n    container.addEventListener('scroll', handleScroll);\n    return () => container.removeEventListener('scroll', handleScroll);\n  }, [allTracks, displayCount]);\n\n  // Suppression de la playlist\n  const handleDeletePlaylist = async () => {\n    if (loadingDelete) return;\n    setLoadingDelete(true);\n    try {\n      await deletePlaylist(id);\n      navigate('/');\n    } catch (err) {\n      console.error(\"Erreur lors de la suppression :\", err);\n      alert(\"Impossible de supprimer la playlist.\");\n    } finally {\n      setLoadingDelete(false);\n    }\n  };\n\n  // Suppression d'une piste\n  const handleRemoveTrack = async trackUri => {\n    try {\n      await removeTrackFromPlaylist(id, trackUri);\n      setAllTracks(prev => prev.filter(item => item.track.uri !== trackUri));\n    } catch (error) {\n      console.error(\"Erreur lors de la suppression de la piste :\", error);\n      alert(\"Impossible de retirer la piste.\");\n    }\n  };\n\n  // Drag & drop\n  const onDragEnd = async result => {\n    if (!result.destination) return;\n    const sourceIndex = result.source.index;\n    const destIndex = result.destination.index;\n    if (sourceIndex === destIndex) return;\n    const newOrder = Array.from(allTracks);\n    const [movedItem] = newOrder.splice(sourceIndex, 1);\n    newOrder.splice(destIndex, 0, movedItem);\n    setAllTracks(newOrder);\n    try {\n      await reorderPlaylistTracks(id, sourceIndex, destIndex);\n    } catch (error) {\n      console.error(\"Erreur lors du réordonnancement :\", error);\n      alert(\"Impossible de réordonner les pistes.\");\n    }\n  };\n\n  // Fonction pour randomiser la playlist\n  const handleRandomize = async () => {\n    if (loadingRandom) return;\n    setLoadingRandom(true);\n    try {\n      const shuffled = shuffleArray(allTracks);\n      setAllTracks(shuffled);\n      const newOrderUris = shuffled.map(item => item.track.uri);\n      await setPlaylistOrder(id, newOrderUris);\n    } catch (error) {\n      console.error(\"Erreur lors de la randomisation :\", error);\n      alert(\"Impossible de randomiser la playlist.\");\n    } finally {\n      setLoadingRandom(false);\n    }\n  };\n\n  // Formatage de la durée totale (affichage en heures si nécessaire)\n  const formatDuration = ms => {\n    const hours = Math.floor(ms / 3600000);\n    const rest = ms % 3600000;\n    const minutes = Math.floor(rest / 60000);\n    const seconds = Math.floor(rest % 60000 / 1000);\n    if (hours > 0) {\n      return `${hours}h ${minutes}m ${seconds < 10 ? \"0\" : \"\"}${seconds}s`;\n    }\n    return `${minutes}:${seconds < 10 ? \"0\" : \"\"}${seconds}`;\n  };\n  const totalFormatted = formatDuration(totalDurationMs);\n  const displayTracks = allTracks.slice(0, displayCount);\n  if (loadingInfo && !playlistInfo) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlist-details loading-state\",\n      children: \"Chargement infos...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 12\n    }, this);\n  }\n  if (!playlistInfo) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlist-details error-state\",\n      children: \"Playlist non trouv\\xE9e.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playlist-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"playlist-details-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlist-info-left\",\n        children: ((_playlistInfo$images = playlistInfo.images) === null || _playlistInfo$images === void 0 ? void 0 : _playlistInfo$images.length) > 0 ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: playlistInfo.images[0].url,\n          alt: playlistInfo.name,\n          className: \"playlist-cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/default-playlist.png\",\n          alt: playlistInfo.name,\n          className: \"playlist-cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlist-info-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: playlistInfo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), playlistInfo.description && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"playlist-description\",\n          children: playlistInfo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"playlist-duration\",\n          children: [allTracks.length, \" pistes \\u2013 \", totalFormatted]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playlist-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"randomize-playlist-btn\",\n            onClick: handleRandomize,\n            disabled: loadingRandom,\n            children: loadingRandom ? \"Randomisation...\" : \"Randomiser la playlist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-playlist-btn\",\n            onClick: handleDeletePlaylist,\n            disabled: loadingDelete,\n            children: loadingDelete ? \"Suppression...\" : \"Supprimer la playlist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tracks-container\",\n      ref: containerRef,\n      children: [/*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: onDragEnd,\n        children: /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"tracks-droppable\",\n          children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"tracks-list\",\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            children: [displayTracks.map((item, index) => {\n              var _track$artists, _track$album;\n              const track = item.track;\n              const artists = (_track$artists = track.artists) === null || _track$artists === void 0 ? void 0 : _track$artists.map(a => a.name).join(', ');\n              const albumName = (_track$album = track.album) === null || _track$album === void 0 ? void 0 : _track$album.name;\n              return /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: track.id || track.uri,\n                index: index,\n                children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  className: `track-item ${snapshot.isDragging ? \"dragging\" : \"\"}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"drag-handle\",\n                    ...provided.dragHandleProps,\n                    children: /*#__PURE__*/_jsxDEV(FaGripVertical, {\n                      size: 20,\n                      color: \"#ccc\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"track-content\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"track-main-line\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"track-number\",\n                        children: [index + 1, \".\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 258,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"track-name\",\n                        children: track.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 259,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 257,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"track-subinfo\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"track-artists\",\n                        onClick: e => {\n                          var _track$artists$;\n                          e.stopPropagation();\n                          navigate(`/artist/${(_track$artists$ = track.artists[0]) === null || _track$artists$ === void 0 ? void 0 : _track$artists$.id}`);\n                        },\n                        children: artists\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 262,\n                        columnNumber: 31\n                      }, this), albumName && /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          children: \" \\u2013 \"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 273,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"track-album\",\n                          onClick: e => {\n                            var _track$album2;\n                            e.stopPropagation();\n                            navigate(`/album/${(_track$album2 = track.album) === null || _track$album2 === void 0 ? void 0 : _track$album2.id}`);\n                          },\n                          children: albumName\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 274,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 261,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"track-right\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"track-duration\",\n                      children: formatDuration(track.duration_ms)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 288,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"remove-track-btn\",\n                      onClick: () => handleRemoveTrack(track.uri),\n                      children: /*#__PURE__*/_jsxDEV(FaTimes, {\n                        size: 16,\n                        color: \"#ff4b4b\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 295,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 291,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 25\n                }, this)\n              }, track.id || track.uri, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 21\n              }, this);\n            }), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), displayCount < allTracks.length && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center',\n          color: '#999',\n          marginTop: '8px'\n        },\n        children: \"Scrollez pour afficher plus...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this), loadingTracks && allTracks.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center',\n          color: '#999'\n        },\n        children: \"Chargement...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n};\n_s(PlaylistDetails, \"Z8zBsCxgxDg40l5cU0KMZV7jsSg=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PlaylistDetails;\nexport default PlaylistDetails;\nvar _c;\n$RefreshReg$(_c, \"PlaylistDetails\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","getPlaylistInfo","getAllPlaylistTracks","removeTrackFromPlaylist","reorderPlaylistTracks","deletePlaylist","setPlaylistOrder","DragDropContext","Droppable","Draggable","FaGripVertical","FaTimes","jsxDEV","_jsxDEV","Fragment","_Fragment","shuffleArray","array","newArray","i","length","j","Math","floor","random","PlaylistDetails","_s","_playlistInfo$images","id","navigate","playlistInfo","setPlaylistInfo","allTracks","setAllTracks","loadingInfo","setLoadingInfo","loadingTracks","setLoadingTracks","loadingDelete","setLoadingDelete","loadingRandom","setLoadingRandom","totalDurationMs","setTotalDurationMs","displayCount","setDisplayCount","containerRef","loadInfo","info","err","console","error","loadTracks","tracksData","total","forEach","item","_item$track","track","duration_ms","handleScroll","container","current","scrollTop","scrollHeight","clientHeight","prev","addEventListener","removeEventListener","handleDeletePlaylist","alert","handleRemoveTrack","trackUri","filter","uri","onDragEnd","result","destination","sourceIndex","source","index","destIndex","newOrder","Array","from","movedItem","splice","handleRandomize","shuffled","newOrderUris","map","formatDuration","ms","hours","rest","minutes","seconds","totalFormatted","displayTracks","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","images","src","url","alt","name","description","onClick","disabled","ref","droppableId","provided","innerRef","droppableProps","_track$artists","_track$album","artists","a","join","albumName","album","draggableId","snapshot","draggableProps","isDragging","dragHandleProps","size","color","e","_track$artists$","stopPropagation","_track$album2","placeholder","style","textAlign","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/Pix/Documents/Projects/spotify-app/src/pages/PlaylistDetails.jsx"],"sourcesContent":["// src/pages/PlaylistDetails.jsx\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport {\r\n  getPlaylistInfo,\r\n  getAllPlaylistTracks,\r\n  removeTrackFromPlaylist,\r\n  reorderPlaylistTracks,\r\n  deletePlaylist,\r\n  setPlaylistOrder,\r\n} from '../services/spotifyService';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { FaGripVertical, FaTimes } from 'react-icons/fa';\r\nimport './PlaylistDetails.css';\r\n\r\n// Fonction de mélange (Fisher–Yates)\r\nconst shuffleArray = (array) => {\r\n  const newArray = [...array];\r\n  for (let i = newArray.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [newArray[i], newArray[j]] = [newArray[j], newArray[i]];\r\n  }\r\n  return newArray;\r\n};\r\n\r\nconst PlaylistDetails = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [playlistInfo, setPlaylistInfo] = useState(null);\r\n  const [allTracks, setAllTracks] = useState([]); // Toutes les pistes de la playlist\r\n  const [loadingInfo, setLoadingInfo] = useState(true);\r\n  const [loadingTracks, setLoadingTracks] = useState(true);\r\n  const [loadingDelete, setLoadingDelete] = useState(false);\r\n  const [loadingRandom, setLoadingRandom] = useState(false);\r\n\r\n  const [totalDurationMs, setTotalDurationMs] = useState(0);\r\n\r\n  // Pour le scroll infini (affichage local)\r\n  const [displayCount, setDisplayCount] = useState(20);\r\n  const containerRef = useRef(null);\r\n\r\n  // Chargement des infos de la playlist (nom, description, images)\r\n  useEffect(() => {\r\n    const loadInfo = async () => {\r\n      setLoadingInfo(true);\r\n      try {\r\n        const info = await getPlaylistInfo(id);\r\n        setPlaylistInfo(info);\r\n      } catch (err) {\r\n        console.error(\"Erreur getPlaylistInfo :\", err);\r\n      } finally {\r\n        setLoadingInfo(false);\r\n      }\r\n    };\r\n    loadInfo();\r\n  }, [id]);\r\n\r\n  // Chargement de toutes les pistes de la playlist via pagination\r\n  useEffect(() => {\r\n    const loadTracks = async () => {\r\n      setLoadingTracks(true);\r\n      try {\r\n        const tracksData = await getAllPlaylistTracks(id);\r\n        setAllTracks(tracksData);\r\n        let total = 0;\r\n        tracksData.forEach(item => {\r\n          if (item.track?.duration_ms) {\r\n            total += item.track.duration_ms;\r\n          }\r\n        });\r\n        setTotalDurationMs(total);\r\n      } catch (err) {\r\n        console.error(\"Erreur getAllPlaylistTracks :\", err);\r\n      } finally {\r\n        setLoadingTracks(false);\r\n      }\r\n    };\r\n    loadTracks();\r\n  }, [id]);\r\n\r\n  // Gestion du scroll infini (affichage local)\r\n  const handleScroll = () => {\r\n    const container = containerRef.current;\r\n    if (!container) return;\r\n    const scrollTop = container.scrollTop;\r\n    const scrollHeight = container.scrollHeight;\r\n    const clientHeight = container.clientHeight;\r\n    if (scrollTop + clientHeight >= scrollHeight - 100) {\r\n      if (displayCount < allTracks.length) {\r\n        setDisplayCount(prev => prev + 20);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const container = containerRef.current;\r\n    if (!container) return;\r\n    container.addEventListener('scroll', handleScroll);\r\n    return () => container.removeEventListener('scroll', handleScroll);\r\n  }, [allTracks, displayCount]);\r\n\r\n  // Suppression de la playlist\r\n  const handleDeletePlaylist = async () => {\r\n    if (loadingDelete) return;\r\n    setLoadingDelete(true);\r\n    try {\r\n      await deletePlaylist(id);\r\n      navigate('/');\r\n    } catch (err) {\r\n      console.error(\"Erreur lors de la suppression :\", err);\r\n      alert(\"Impossible de supprimer la playlist.\");\r\n    } finally {\r\n      setLoadingDelete(false);\r\n    }\r\n  };\r\n\r\n  // Suppression d'une piste\r\n  const handleRemoveTrack = async (trackUri) => {\r\n    try {\r\n      await removeTrackFromPlaylist(id, trackUri);\r\n      setAllTracks(prev => prev.filter(item => item.track.uri !== trackUri));\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la suppression de la piste :\", error);\r\n      alert(\"Impossible de retirer la piste.\");\r\n    }\r\n  };\r\n\r\n  // Drag & drop\r\n  const onDragEnd = async (result) => {\r\n    if (!result.destination) return;\r\n    const sourceIndex = result.source.index;\r\n    const destIndex = result.destination.index;\r\n    if (sourceIndex === destIndex) return;\r\n    const newOrder = Array.from(allTracks);\r\n    const [movedItem] = newOrder.splice(sourceIndex, 1);\r\n    newOrder.splice(destIndex, 0, movedItem);\r\n    setAllTracks(newOrder);\r\n    try {\r\n      await reorderPlaylistTracks(id, sourceIndex, destIndex);\r\n    } catch (error) {\r\n      console.error(\"Erreur lors du réordonnancement :\", error);\r\n      alert(\"Impossible de réordonner les pistes.\");\r\n    }\r\n  };\r\n\r\n  // Fonction pour randomiser la playlist\r\n  const handleRandomize = async () => {\r\n    if (loadingRandom) return;\r\n    setLoadingRandom(true);\r\n    try {\r\n      const shuffled = shuffleArray(allTracks);\r\n      setAllTracks(shuffled);\r\n      const newOrderUris = shuffled.map(item => item.track.uri);\r\n      await setPlaylistOrder(id, newOrderUris);\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la randomisation :\", error);\r\n      alert(\"Impossible de randomiser la playlist.\");\r\n    } finally {\r\n      setLoadingRandom(false);\r\n    }\r\n  };\r\n\r\n  // Formatage de la durée totale (affichage en heures si nécessaire)\r\n  const formatDuration = (ms) => {\r\n    const hours = Math.floor(ms / 3600000);\r\n    const rest = ms % 3600000;\r\n    const minutes = Math.floor(rest / 60000);\r\n    const seconds = Math.floor((rest % 60000) / 1000);\r\n    if (hours > 0) {\r\n      return `${hours}h ${minutes}m ${seconds < 10 ? \"0\" : \"\"}${seconds}s`;\r\n    }\r\n    return `${minutes}:${seconds < 10 ? \"0\" : \"\"}${seconds}`;\r\n  };\r\n\r\n  const totalFormatted = formatDuration(totalDurationMs);\r\n  const displayTracks = allTracks.slice(0, displayCount);\r\n\r\n  if (loadingInfo && !playlistInfo) {\r\n    return <div className=\"playlist-details loading-state\">Chargement infos...</div>;\r\n  }\r\n  if (!playlistInfo) {\r\n    return <div className=\"playlist-details error-state\">Playlist non trouvée.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"playlist-details\">\r\n      <header className=\"playlist-details-header\">\r\n        <div className=\"playlist-info-left\">\r\n          {playlistInfo.images?.length > 0 ? (\r\n            <img\r\n              src={playlistInfo.images[0].url}\r\n              alt={playlistInfo.name}\r\n              className=\"playlist-cover\"\r\n            />\r\n          ) : (\r\n            <img\r\n              src=\"/default-playlist.png\"\r\n              alt={playlistInfo.name}\r\n              className=\"playlist-cover\"\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"playlist-info-right\">\r\n          <h2>{playlistInfo.name}</h2>\r\n          {playlistInfo.description && (\r\n            <p className=\"playlist-description\">{playlistInfo.description}</p>\r\n          )}\r\n          <p className=\"playlist-duration\">\r\n            {allTracks.length} pistes – {totalFormatted}\r\n          </p>\r\n          <div className=\"playlist-actions\">\r\n            <button\r\n              className=\"randomize-playlist-btn\"\r\n              onClick={handleRandomize}\r\n              disabled={loadingRandom}\r\n            >\r\n              {loadingRandom ? \"Randomisation...\" : \"Randomiser la playlist\"}\r\n            </button>\r\n            <button\r\n              className=\"delete-playlist-btn\"\r\n              onClick={handleDeletePlaylist}\r\n              disabled={loadingDelete}\r\n            >\r\n              {loadingDelete ? \"Suppression...\" : \"Supprimer la playlist\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"tracks-container\" ref={containerRef}>\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          <Droppable droppableId=\"tracks-droppable\">\r\n            {(provided) => (\r\n              <ul className=\"tracks-list\" ref={provided.innerRef} {...provided.droppableProps}>\r\n                {displayTracks.map((item, index) => {\r\n                  const track = item.track;\r\n                  const artists = track.artists?.map(a => a.name).join(', ');\r\n                  const albumName = track.album?.name;\r\n                  return (\r\n                    <Draggable\r\n                      key={track.id || track.uri}\r\n                      draggableId={track.id || track.uri}\r\n                      index={index}\r\n                    >\r\n                      {(provided, snapshot) => (\r\n                        <li\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          className={`track-item ${snapshot.isDragging ? \"dragging\" : \"\"}`}\r\n                        >\r\n                          {/* Seule l’icône active le drag */}\r\n                          <div className=\"drag-handle\" {...provided.dragHandleProps}>\r\n                            <FaGripVertical size={20} color=\"#ccc\" />\r\n                          </div>\r\n                          <div className=\"track-content\">\r\n                            <div className=\"track-main-line\">\r\n                              <span className=\"track-number\">{index + 1}.</span>\r\n                              <span className=\"track-name\">{track.name}</span>\r\n                            </div>\r\n                            <div className=\"track-subinfo\">\r\n                              <span\r\n                                className=\"track-artists\"\r\n                                onClick={(e) => {\r\n                                  e.stopPropagation();\r\n                                  navigate(`/artist/${track.artists[0]?.id}`);\r\n                                }}\r\n                              >\r\n                                {artists}\r\n                              </span>\r\n                              {albumName && (\r\n                                <>\r\n                                  <span> – </span>\r\n                                  <span\r\n                                    className=\"track-album\"\r\n                                    onClick={(e) => {\r\n                                      e.stopPropagation();\r\n                                      navigate(`/album/${track.album?.id}`);\r\n                                    }}\r\n                                  >\r\n                                    {albumName}\r\n                                  </span>\r\n                                </>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"track-right\">\r\n                            <span className=\"track-duration\">\r\n                              {formatDuration(track.duration_ms)}\r\n                            </span>\r\n                            <button\r\n                              className=\"remove-track-btn\"\r\n                              onClick={() => handleRemoveTrack(track.uri)}\r\n                            >\r\n                              <FaTimes size={16} color=\"#ff4b4b\" />\r\n                            </button>\r\n                          </div>\r\n                        </li>\r\n                      )}\r\n                    </Draggable>\r\n                  );\r\n                })}\r\n                {provided.placeholder}\r\n              </ul>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n        {displayCount < allTracks.length && (\r\n          <p style={{ textAlign: 'center', color: '#999', marginTop: '8px' }}>\r\n            Scrollez pour afficher plus...\r\n          </p>\r\n        )}\r\n        {loadingTracks && allTracks.length > 0 && (\r\n          <p style={{ textAlign: 'center', color: '#999' }}>Chargement...</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlaylistDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}